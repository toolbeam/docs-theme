---
import config from "virtual:starlight/user-config";
import type { Props } from "@astrojs/starlight/props";

import Search from "virtual:starlight/components/Search";
import SiteTitle from "virtual:starlight/components/SiteTitle";
import SocialIcons from "virtual:starlight/components/SocialIcons";
import { Icon } from "@astrojs/starlight/components";
import HeaderLinks from "../components/HeaderLinks.astro";

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
	config.pagefind ||
	config.components.Search !== "@astrojs/starlight/components/Search.astro";

const links = config.social || [];
---

<div class="header sl-flex">
	<div class="title-wrapper sl-flex">
		<SiteTitle {...Astro.props} />
	</div>
	<div class="middle-group sl-flex">
		<HeaderLinks {...Astro.props} />
	</div>
	<div class="sl-hidden md:sl-flex right-group">
		{
			links.length > 0 && (
				<div class="sl-flex social-icons">
					{links.map(({ href, icon }) => (
						<a {href} rel="me" target="_blank">
							<Icon name={icon} size="1rem" />
						</a>
					))}
				</div>
			)
		}
		{shouldRenderSearch && <Search {...Astro.props} />}
	</div>
</div>

<style>
	.header {
		gap: calc(var(--sl-nav-gap) * 2);
		justify-content: space-between;
		align-items: center;
		height: 100%;
	}

	.title-wrapper {
		/* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
		overflow: clip;
		/* Avoid clipping focus ring around link inside title wrapper. */
    padding: calc(0.25rem + 2px) 0.25rem calc(0.25rem - 2px);
		margin: -0.25rem;
	}

	.middle-group {
		justify-content: flex-end;
		gap: var(--sl-nav-gap);
	}
	@media (max-width: 50rem) {
		:global(:root[data-has-sidebar]) {
			.middle-group {
				display: none;
			}
		}
	}
	@media (min-width: 50rem) {
		.middle-group {
			display: flex;
		}
	}

	.right-group,
	.social-icons {
		gap: 1rem;
		align-items: center;

    a {
          line-height: 1;

          svg {
              color: var(--sl-color-text-dimmed);
          }
      }
	}

	@media (min-width: 50rem) {
		:global(:root[data-has-sidebar]) {
			--__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
		}
		:global(:root:not([data-has-toc])) {
			--__toc-width: 0rem;
		}
		.header {
			--__sidebar-width: max(0rem, var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x));
			--__main-column-fr: calc(
				(
						100% + var(--__sidebar-pad, 0rem) - var(--__toc-width, var(--sl-sidebar-width)) -
							(2 * var(--__toc-width, var(--sl-nav-pad-x))) - var(--sl-content-inline-start, 0rem) -
							var(--sl-content-width)
					) / 2
			);
			display: grid;
			grid-template-columns:
        /* 1 (site title): runs up until the main content columnâ€™s left edge or the width of the title, whichever is the largest  */
				minmax(
					calc(var(--__sidebar-width) + max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
					auto
				)
				/* 2 (search box): all free space that is available. */
				1fr
				/* 3 (right items): use the space that these need. */
				auto;
			align-content: center;
		}
	}
</style>

